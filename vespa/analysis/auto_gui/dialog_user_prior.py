# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.0 on Mon Feb  1 11:34:14 2021
#

import wx

# begin wxGlade: dependencies
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((1128, 539))
        self.SetTitle("User-Defined Prior Spectrum for Automatic Phase/B0 Algorithms")

        self.SizerSplitterWindow = wx.BoxSizer(wx.VERTICAL)

        self.WindowSplitter = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_NOBORDER)
        self.WindowSplitter.SetMinimumPaneSize(20)
        self.SizerSplitterWindow.Add(self.WindowSplitter, 1, wx.ALL | wx.EXPAND, 5)

        self.PanelPrior = wx.Panel(self.WindowSplitter, wx.ID_ANY)

        sizer_70 = wx.BoxSizer(wx.VERTICAL)

        sizer_12_copy = wx.StaticBoxSizer(wx.StaticBox(self.PanelPrior, wx.ID_ANY, "Model Lines"), wx.VERTICAL)
        sizer_70.Add(sizer_12_copy, 0, wx.EXPAND | wx.LEFT | wx.RIGHT, 8)

        sizer_48_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12_copy.Add(sizer_48_copy, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 4)

        self.ButtonAutoAdd = wx.Button(self.PanelPrior, wx.ID_ANY, "Add Line")
        sizer_48_copy.Add(self.ButtonAutoAdd, 0, wx.RIGHT, 4)

        sizer_48_copy.Add((20, 20), 1, 0, 0)

        self.ButtonAutoDelete = wx.Button(self.PanelPrior, wx.ID_ANY, "Delete Selected")
        sizer_48_copy.Add(self.ButtonAutoDelete, 0, wx.RIGHT, 4)

        self.ButtonAllOn = wx.Button(self.PanelPrior, wx.ID_ANY, "All On")
        sizer_48_copy.Add(self.ButtonAllOn, 0, 0, 0)

        self.ButtonAllOff = wx.Button(self.PanelPrior, wx.ID_ANY, "All Off")
        sizer_48_copy.Add(self.ButtonAllOff, 0, 0, 0)

        self.ButtonAutoRestoreDefaults = wx.Button(self.PanelPrior, wx.ID_ANY, "Restore Defaults")
        sizer_48_copy.Add(self.ButtonAutoRestoreDefaults, 0, 0, 0)

        self.PanelLines = wx.Panel(self.PanelPrior, wx.ID_ANY)
        sizer_12_copy.Add(self.PanelLines, 0, wx.EXPAND, 0)

        LinesGridSizer = wx.FlexGridSizer(1, 5, 5, 5)

        self.LabelPriorLinesPlaceholder = wx.StaticText(self.PanelLines, wx.ID_ANY, "Just a placeholder for prior lines")
        LinesGridSizer.Add(self.LabelPriorLinesPlaceholder, 0, 0, 0)

        LinesGridSizer.Add((0, 0), 0, 0, 0)

        LinesGridSizer.Add((0, 0), 0, 0, 0)

        LinesGridSizer.Add((0, 0), 0, 0, 0)

        LinesGridSizer.Add((0, 0), 0, 0, 0)

        sizer_76 = wx.StaticBoxSizer(wx.StaticBox(self.PanelPrior, wx.ID_ANY, "Algorithm Parameters"), wx.VERTICAL)
        sizer_70.Add(sizer_76, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 8)

        grid_sizer_3 = wx.FlexGridSizer(4, 4, 6, 2)
        sizer_76.Add(grid_sizer_3, 1, wx.BOTTOM | wx.EXPAND | wx.TOP, 2)

        self.LabelAutoB0RangeStart = wx.StaticText(self.PanelPrior, wx.ID_ANY, "Auto B0 Range [ppm] - Start:")
        grid_sizer_3.Add(self.LabelAutoB0RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoB0RangeStart = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoB0RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 8)

        self.LabelAutoB0RangeEnd = wx.StaticText(self.PanelPrior, wx.ID_ANY, "End:")
        grid_sizer_3.Add(self.LabelAutoB0RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoB0RangeEnd = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoB0RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.LabelAutoPhase0RangeStart = wx.StaticText(self.PanelPrior, wx.ID_ANY, "Auto Phase 0 Range [ppm] - Start:")
        grid_sizer_3.Add(self.LabelAutoPhase0RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoPhase0RangeStart = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoPhase0RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 8)

        self.LabelAutoPhase0RangeEnd = wx.StaticText(self.PanelPrior, wx.ID_ANY, "End:")
        grid_sizer_3.Add(self.LabelAutoPhase0RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoPhase0RangeEnd = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoPhase0RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.LabelAutoPhase1RangeStart = wx.StaticText(self.PanelPrior, wx.ID_ANY, "Auto Phase 1 Range [ppm] - Start:")
        grid_sizer_3.Add(self.LabelAutoPhase1RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoPhase1RangeStart = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoPhase1RangeStart, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 8)

        self.LabelAutoPhase1RangeEnd = wx.StaticText(self.PanelPrior, wx.ID_ANY, "End:")
        grid_sizer_3.Add(self.LabelAutoPhase1RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoPhase1RangeEnd = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoPhase1RangeEnd, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.LabelPhase1Pivot = wx.StaticText(self.PanelPrior, wx.ID_ANY, "Phase 1 Pivot [ppm]:")
        grid_sizer_3.Add(self.LabelPhase1Pivot, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatAutoPhase1Pivot = FloatSpin(self.PanelPrior, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_3.Add(self.FloatAutoPhase1Pivot, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 8)

        grid_sizer_3.Add((20, 20), 0, wx.EXPAND, 0)

        grid_sizer_3.Add((20, 20), 0, wx.EXPAND, 0)

        self.PanelPreview = wx.Panel(self.WindowSplitter, wx.ID_ANY)

        sizer_17_copy = wx.StaticBoxSizer(wx.StaticBox(self.PanelPreview, wx.ID_ANY, "Preview"), wx.VERTICAL)

        self.PanelView = wx.Panel(self.PanelPreview, wx.ID_ANY)
        sizer_17_copy.Add(self.PanelView, 1, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        self.SizerSplitterWindow.Add(sizer_2, 0, wx.ALL | wx.EXPAND, 10)

        self.LabelOKCancelPlaceholder = wx.StaticText(self, wx.ID_ANY, "LabelOKCancelPlaceholder")
        sizer_2.Add(self.LabelOKCancelPlaceholder, 0, 0, 0)

        self.PanelPreview.SetSizer(sizer_17_copy)

        self.PanelLines.SetSizer(LinesGridSizer)

        self.PanelPrior.SetSizer(sizer_70)

        self.WindowSplitter.SplitVertically(self.PanelPrior, self.PanelPreview)

        self.SetSizer(self.SizerSplitterWindow)

        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.on_add_line, self.ButtonAutoAdd)
        self.Bind(wx.EVT_BUTTON, self.on_delete_line, self.ButtonAutoDelete)
        self.Bind(wx.EVT_BUTTON, self.on_all_on, self.ButtonAllOn)
        self.Bind(wx.EVT_BUTTON, self.on_all_off, self.ButtonAllOff)
        self.Bind(wx.EVT_BUTTON, self.on_restore_defaults, self.ButtonAutoRestoreDefaults)
        self.Bind( EVT_FLOATSPIN, self.on_auto_b0_range_start, self.FloatAutoB0RangeStart)
        self.Bind( EVT_FLOATSPIN, self.on_auto_b0_range_end, self.FloatAutoB0RangeEnd)
        self.Bind( EVT_FLOATSPIN, self.on_auto_phase0_range_start, self.FloatAutoPhase0RangeStart)
        self.Bind( EVT_FLOATSPIN, self.on_auto_phase0_range_end, self.FloatAutoPhase0RangeEnd)
        self.Bind( EVT_FLOATSPIN, self.on_auto_phase1_range_start, self.FloatAutoPhase1RangeStart)
        self.Bind( EVT_FLOATSPIN, self.on_auto_phase1_range_end, self.FloatAutoPhase1RangeEnd)
        self.Bind( EVT_FLOATSPIN, self.on_auto_phase1_pivot, self.FloatAutoPhase1Pivot)
        # end wxGlade

    def on_add_line(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_add_line' not implemented!")
        event.Skip()

    def on_delete_line(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_delete_line' not implemented!")
        event.Skip()

    def on_all_on(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_all_on' not implemented!")
        event.Skip()

    def on_all_off(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_all_off' not implemented!")
        event.Skip()

    def on_restore_defaults(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_restore_defaults' not implemented!")
        event.Skip()

    def on_auto_b0_range_start(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_b0_range_start' not implemented!")
        event.Skip()

    def on_auto_b0_range_end(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_b0_range_end' not implemented!")
        event.Skip()

    def on_auto_phase0_range_start(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_phase0_range_start' not implemented!")
        event.Skip()

    def on_auto_phase0_range_end(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_phase0_range_end' not implemented!")
        event.Skip()

    def on_auto_phase1_range_start(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_phase1_range_start' not implemented!")
        event.Skip()

    def on_auto_phase1_range_end(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_phase1_range_end' not implemented!")
        event.Skip()

    def on_auto_phase1_pivot(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_auto_phase1_pivot' not implemented!")
        event.Skip()

# end of class MyDialog
