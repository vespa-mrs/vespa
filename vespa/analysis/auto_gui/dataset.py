# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.0 on Fri Jan 22 22:59:31 2021
#

import wx

# begin wxGlade: dependencies
from vespa.common.wx_gravy.widgets.floatspin_multiplier.floatspin_multiplier_base import FloatSpinMultiplier
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class DatasetUI(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: DatasetUI.__init__
        kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        sizer_30 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_30, 0, wx.ALL | wx.EXPAND, 4)

        label_11 = wx.StaticText(self, wx.ID_ANY, "Source:")
        sizer_30.Add(label_11, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 8)

        self.TextData = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_READONLY)
        sizer_30.Add(self.TextData, 3, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 3)

        sizer_30.Add((30, 20), 0, wx.EXPAND, 0)

        label_1_copy = wx.StaticText(self, wx.ID_ANY, "Location - X:")
        sizer_30.Add(label_1_copy, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 4)

        self.SpinX = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=1, style=wx.SP_ARROW_KEYS | wx.SP_WRAP | wx.TE_PROCESS_ENTER)
        self.SpinX.SetMinSize((50,-1))
        sizer_30.Add(self.SpinX, 0, wx.EXPAND, 0)

        label_2 = wx.StaticText(self, wx.ID_ANY, " Y:")
        label_2.Hide()
        sizer_30.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)

        self.SpinY = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=1, style=wx.SP_ARROW_KEYS | wx.SP_WRAP | wx.TE_PROCESS_ENTER)
        self.SpinY.SetMinSize((50,-1))
        self.SpinY.Hide()
        sizer_30.Add(self.SpinY, 0, wx.EXPAND, 0)

        self.label_3 = wx.StaticText(self, wx.ID_ANY, " Z:")
        self.label_3.Hide()
        sizer_30.Add(self.label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)

        self.SpinZ = wx.SpinCtrl(self, wx.ID_ANY, "1", min=1, max=1, style=wx.SP_ARROW_KEYS | wx.SP_WRAP | wx.TE_PROCESS_ENTER)
        self.SpinZ.SetMinSize((50,-1))
        self.SpinZ.Hide()
        sizer_30.Add(self.SpinZ, 0, wx.EXPAND, 0)

        label_4 = wx.StaticText(self, wx.ID_ANY, " Scale:")
        sizer_30.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 4)

        self.FloatScale = FloatSpinMultiplier(self, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, multiplier=1.1, agwStyle=FS_LEFT, style=0)
        sizer_30.Add(self.FloatScale, 0, wx.EXPAND, 0)

        self.LabelNotebookPlaceholder = wx.StaticText(self, wx.ID_ANY, "LabelNotebookPlaceholder")
        sizer_2.Add(self.LabelNotebookPlaceholder, 0, 0, 0)

        self.SetSizer(sizer_2)

        self.Layout()

        self.Bind(wx.EVT_SPINCTRL, self.on_voxel_change, self.SpinX)
        self.Bind(wx.EVT_SPINCTRL, self.on_voxel_change, self.SpinY)
        self.Bind(wx.EVT_SPINCTRL, self.on_voxel_change, self.SpinZ)
        self.Bind( EVT_FLOATSPIN, self.on_scale, self.FloatScale)
        # end wxGlade

    def on_voxel_change(self, event):  # wxGlade: DatasetUI.<event_handler>
        print("Event handler 'on_voxel_change' not implemented!")
        event.Skip()

    def on_scale(self, event):  # wxGlade: DatasetUI.<event_handler>
        print("Event handler 'on_scale' not implemented!")
        event.Skip()

# end of class DatasetUI

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle("frame_1")

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.DatasetUI = DatasetUI(self, wx.ID_ANY)
        sizer_1.Add(self.DatasetUI, 1, wx.EXPAND, 0)

        self.SetSizer(sizer_1)
        sizer_1.Fit(self)

        self.Layout()
        # end wxGlade

# end of class MyFrame
