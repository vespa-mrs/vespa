# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.0 on Wed Feb  3 17:16:07 2021
#

import wx

# begin wxGlade: dependencies
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((1128, 691))
        self.SetTitle("User-Defined Prior Spectrum for Automatic Phase/B0 Algorithms")

        self.SizerSplitterWindow = wx.BoxSizer(wx.VERTICAL)

        self.SplitterWindow = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_NOBORDER)
        self.SplitterWindow.SetMinimumPaneSize(20)
        self.SizerSplitterWindow.Add(self.SplitterWindow, 1, wx.ALL | wx.EXPAND, 5)

        self.PanelUserDefinedMetabolite = wx.Panel(self.SplitterWindow, wx.ID_ANY)

        sizer_70 = wx.BoxSizer(wx.VERTICAL)

        sizer_5 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Unique Metabolite Name [alpha-numeric, underscore and hyphen only]"), wx.HORIZONTAL)
        sizer_70.Add(sizer_5, 0, wx.ALL | wx.EXPAND, 8)

        self.label_1 = wx.StaticText(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Name:", style=wx.ALIGN_LEFT)
        sizer_5.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 6)

        self.TextMetaboliteName = wx.TextCtrl(self.PanelUserDefinedMetabolite, wx.ID_ANY, "")
        sizer_5.Add(self.TextMetaboliteName, 1, wx.ALL | wx.EXPAND, 6)

        sizer_12_copy = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Metabolite Lines"), wx.VERTICAL)
        sizer_70.Add(sizer_12_copy, 1, wx.ALL | wx.EXPAND, 8)

        sizer_48_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12_copy.Add(sizer_48_copy, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 6)

        self.ButtonAutoAdd = wx.Button(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Add a Line")
        sizer_48_copy.Add(self.ButtonAutoAdd, 0, wx.RIGHT, 4)

        self.ButtonAutoDelete = wx.Button(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Delete Selected Line(s)")
        sizer_48_copy.Add(self.ButtonAutoDelete, 0, wx.RIGHT, 4)

        self.PanelMetabolite = wx.Panel(self.PanelUserDefinedMetabolite, wx.ID_ANY)
        sizer_12_copy.Add(self.PanelMetabolite, 0, wx.EXPAND, 0)

        GridSizerMetabolite = wx.FlexGridSizer(1, 4, 5, 5)

        self.LabelMetaboliteLinesPlaceholder = wx.StaticText(self.PanelMetabolite, wx.ID_ANY, "Just a placeholder for prior lines")
        GridSizerMetabolite.Add(self.LabelMetaboliteLinesPlaceholder, 0, 0, 0)

        GridSizerMetabolite.Add((0, 0), 0, 0, 0)

        GridSizerMetabolite.Add((0, 0), 0, 0, 0)

        GridSizerMetabolite.Add((0, 0), 0, 0, 0)

        sizer_3 = wx.StaticBoxSizer(wx.StaticBox(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Preview Display Controls"), wx.VERTICAL)
        sizer_70.Add(sizer_3, 0, wx.ALL | wx.EXPAND, 6)

        grid_sizer_1 = wx.FlexGridSizer(1, 4, 4, 4)
        sizer_3.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 4)

        label_27 = wx.StaticText(self.PanelUserDefinedMetabolite, wx.ID_ANY, "Linewidth [Hz] : ", style=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(label_27, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.FloatLinewidth = FloatSpin(self.PanelUserDefinedMetabolite, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_LEFT, style=0)
        grid_sizer_1.Add(self.FloatLinewidth, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 8)

        label_29 = wx.StaticText(self.PanelUserDefinedMetabolite, wx.ID_ANY, "     Zero Line Location :", style=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(label_29, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)

        self.ComboZeroLineLocation = wx.ComboBox(self.PanelUserDefinedMetabolite, wx.ID_ANY, choices=["Top", "Middle", "Bottom"], style=wx.CB_READONLY)
        grid_sizer_1.Add(self.ComboZeroLineLocation, 0, 0, 0)

        self.PanelPreview = wx.Panel(self.SplitterWindow, wx.ID_ANY)

        sizer_17_copy = wx.StaticBoxSizer(wx.StaticBox(self.PanelPreview, wx.ID_ANY, "Preview"), wx.VERTICAL)

        self.PanelView = wx.Panel(self.PanelPreview, wx.ID_ANY)
        sizer_17_copy.Add(self.PanelView, 1, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        self.SizerSplitterWindow.Add(sizer_2, 0, wx.ALL | wx.EXPAND, 10)

        self.LabelOKCancelPlaceholder = wx.StaticText(self, wx.ID_ANY, "LabelOKCancelPlaceholder")
        sizer_2.Add(self.LabelOKCancelPlaceholder, 0, 0, 0)

        self.PanelPreview.SetSizer(sizer_17_copy)

        GridSizerMetabolite.AddGrowableCol(1)
        GridSizerMetabolite.AddGrowableCol(2)
        GridSizerMetabolite.AddGrowableCol(3)
        self.PanelMetabolite.SetSizer(GridSizerMetabolite)

        self.PanelUserDefinedMetabolite.SetSizer(sizer_70)

        self.SplitterWindow.SplitVertically(self.PanelUserDefinedMetabolite, self.PanelPreview)

        self.SetSizer(self.SizerSplitterWindow)

        self.Layout()

        self.Bind(wx.EVT_TEXT_ENTER, self.on_metabolite_name, self.TextMetaboliteName)
        self.Bind(wx.EVT_BUTTON, self.on_add_line, self.ButtonAutoAdd)
        self.Bind(wx.EVT_BUTTON, self.on_delete_line, self.ButtonAutoDelete)
        self.Bind( EVT_FLOATSPIN, self.on_linewidth, self.FloatLinewidth)
        self.Bind(wx.EVT_COMBOBOX, self.on_zero_line_location, self.ComboZeroLineLocation)
        # end wxGlade

    def on_metabolite_name(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_metabolite_name' not implemented!")
        event.Skip()

    def on_add_line(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_add_line' not implemented!")
        event.Skip()

    def on_delete_line(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_delete_line' not implemented!")
        event.Skip()

    def on_linewidth(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_linewidth' not implemented!")
        event.Skip()

    def on_zero_line_location(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_zero_line_location' not implemented!")
        event.Skip()

# end of class MyDialog
