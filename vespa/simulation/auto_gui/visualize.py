# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Thu May 28 21:27:38 2020
#

import wx
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class PanelVisualizeUI(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PanelVisualizeUI.__init__
        kwds["style"] = kwds.get("style", 0)
        wx.Panel.__init__(self, *args, **kwds)
        self.SplitterWindow = wx.SplitterWindow(self, wx.ID_ANY)
        self.PanelVisualize = wx.Panel(self.SplitterWindow, wx.ID_ANY)
        self.ChoiceDisplayMode = wx.Choice(self.PanelVisualize, wx.ID_ANY, choices=[])
        self.FloatXaxisMax = FloatSpin(self.PanelVisualize, wx.ID_ANY, value=100.0, digits=3, min_val=0.0, max_val=100.0, increment=0.1, agwStyle=FS_CENTRE, style=0)
        self.FloatXaxisMin = FloatSpin(self.PanelVisualize, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=0.1, agwStyle=FS_CENTRE, style=0)
        self.FloatCursorMax = FloatSpin(self.PanelVisualize, wx.ID_ANY, value=100.0, digits=3, min_val=0.0, max_val=100.0, increment=0.1, agwStyle=FS_CENTRE, style=0)
        self.FloatCursorMin = FloatSpin(self.PanelVisualize, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=0.1, agwStyle=FS_CENTRE, style=0)
        self.panel_loop1_controls = wx.Panel(self.PanelVisualize, wx.ID_ANY)
        self.SpinIndex1 = wx.SpinCtrl(self.panel_loop1_controls, wx.ID_ANY, "", min=0, max=100000, style=0)
        self.LabelLoop1Label = wx.StaticText(self.panel_loop1_controls, wx.ID_ANY, "Label")
        self.LabelIndex1Value = wx.StaticText(self.panel_loop1_controls, wx.ID_ANY, "Value")
        self.panel_loop2_controls = wx.Panel(self.PanelVisualize, wx.ID_ANY)
        self.SpinIndex2 = wx.SpinCtrl(self.panel_loop2_controls, wx.ID_ANY, "", min=0, max=100000, style=0)
        self.LabelLoop2Label = wx.StaticText(self.panel_loop2_controls, wx.ID_ANY, "Label")
        self.LabelIndex2Value = wx.StaticText(self.panel_loop2_controls, wx.ID_ANY, "Value")
        self.panel_loop3_controls = wx.Panel(self.PanelVisualize, wx.ID_ANY)
        self.SpinIndex3 = wx.SpinCtrl(self.panel_loop3_controls, wx.ID_ANY, "", min=0, max=100000, style=0)
        self.LabelLoop3Label = wx.StaticText(self.panel_loop3_controls, wx.ID_ANY, "Label")
        self.LabelIndex3Value = wx.StaticText(self.panel_loop3_controls, wx.ID_ANY, "Value")
        self.label_14 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, " Metabolites to Plot  ")
        self.CheckSumPlots = wx.CheckBox(self.PanelVisualize, wx.ID_ANY, "Sum Plots   ")
        self.ListPlotMetabolites = wx.ListBox(self.PanelVisualize, wx.ID_ANY, choices=[], style=wx.LB_EXTENDED)
        self.CheckGrayscale = wx.CheckBox(self.PanelVisualize, wx.ID_ANY, "Grayscale")
        self.SpinContourLevels = wx.SpinCtrl(self.PanelVisualize, wx.ID_ANY, "1", min=1, max=50, style=0)
        self.ChoiceContourMode = wx.Choice(self.PanelVisualize, wx.ID_ANY, choices=["Contour Index 1+2", "Contour Index 1+3", "Contour Index 2+3"])
        self.buttonResolution = wx.Button(self.PanelVisualize, wx.ID_ANY, "Set Resolution ...")
        self.FloatLinewidth = FloatSpin(self.PanelVisualize, wx.ID_ANY, value=0.0, digits=3, min_val=0.0, max_val=100.0, increment=1.0, agwStyle=FS_CENTRE, style=0)
        self.ButtonAsciiText = wx.Button(self.PanelVisualize, wx.ID_ANY, "ASCII Display")
        self.PanelAuiNotebook = wx.Panel(self.SplitterWindow, wx.ID_ANY)
        self.TextAuiPlaceholder = wx.StaticText(self.PanelAuiNotebook, wx.ID_ANY, "Aui Placeholder ")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHOICE, self.on_display_mode, self.ChoiceDisplayMode)
        self.Bind( EVT_FLOATSPIN, self.on_xaxis_max, self.FloatXaxisMax)
        self.Bind( EVT_FLOATSPIN, self.on_xaxis_min, self.FloatXaxisMin)
        self.Bind( EVT_FLOATSPIN, self.on_cursor_max, self.FloatCursorMax)
        self.Bind( EVT_FLOATSPIN, self.on_cursor_min, self.FloatCursorMin)
        self.Bind(wx.EVT_SPINCTRL, self.on_index1, self.SpinIndex1)
        self.Bind(wx.EVT_SPINCTRL, self.on_index2, self.SpinIndex2)
        self.Bind(wx.EVT_SPINCTRL, self.on_index3, self.SpinIndex3)
        self.Bind(wx.EVT_CHECKBOX, self.on_sum_plots, self.CheckSumPlots)
        self.Bind(wx.EVT_LISTBOX, self.on_metabolites, self.ListPlotMetabolites)
        self.Bind(wx.EVT_CHECKBOX, self.on_grayscale, self.CheckGrayscale)
        self.Bind(wx.EVT_SPINCTRL, self.on_contour_levels, self.SpinContourLevels)
        self.Bind(wx.EVT_CHOICE, self.on_contour_mode, self.ChoiceContourMode)
        self.Bind(wx.EVT_BUTTON, self.on_resolution, self.buttonResolution)
        self.Bind( EVT_FLOATSPIN, self.on_linewidth, self.FloatLinewidth)
        self.Bind(wx.EVT_BUTTON, self.on_ascii_display, self.ButtonAsciiText)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PanelVisualizeUI.__set_properties
        self.FloatXaxisMax.SetMinSize((80, -1))
        self.FloatXaxisMin.SetMinSize((80, -1))
        self.FloatCursorMax.SetMinSize((80, -1))
        self.FloatCursorMin.SetMinSize((80, -1))
        self.SpinIndex1.SetMinSize((80, -1))
        self.SpinIndex2.SetMinSize((80, -1))
        self.SpinIndex3.SetMinSize((80, -1))
        self.ListPlotMetabolites.SetMinSize((-1, 40))
        self.SpinContourLevels.SetMinSize((70, -1))
        self.ChoiceContourMode.SetSelection(0)
        self.FloatLinewidth.SetMinSize((80, -1))
        self.PanelVisualize.SetMinSize((350,-1))
        self.SplitterWindow.SetMinimumPaneSize(20)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: PanelVisualizeUI.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_aui_notebook = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.StaticBoxSizer(wx.StaticBox(self.PanelVisualize, wx.ID_ANY, "Main Plot"), wx.VERTICAL)
        sizer_24 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.StaticBoxSizer(wx.StaticBox(self.PanelVisualize, wx.ID_ANY, "Basis Function Parameters"), wx.VERTICAL)
        sizer_23 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_22 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.StaticBoxSizer(wx.StaticBox(self.PanelVisualize, wx.ID_ANY, "Contour Plot"), wx.VERTICAL)
        sizer_17 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_123 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_30 = wx.StaticBoxSizer(wx.StaticBox(self.PanelVisualize, wx.ID_ANY, "Cursor range [PPM]"), wx.HORIZONTAL)
        sizer_29 = wx.StaticBoxSizer(wx.StaticBox(self.PanelVisualize, wx.ID_ANY, "X-Axis range [PPM]"), wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        label_1 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Display Mode  Plot 1D : ")
        sizer_8.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_8.Add(self.ChoiceDisplayMode, 1, wx.EXPAND, 0)
        sizer_7.Add(sizer_8, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 5)
        label_2 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Max", style=wx.ALIGN_RIGHT)
        sizer_29.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 4)
        sizer_29.Add(self.FloatXaxisMax, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        label_3 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Min", style=wx.ALIGN_RIGHT)
        sizer_29.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 4)
        sizer_29.Add(self.FloatXaxisMin, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        sizer_10.Add(sizer_29, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 3)
        label_4 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Max", style=wx.ALIGN_RIGHT)
        sizer_30.Add(label_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 4)
        sizer_30.Add(self.FloatCursorMax, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        label_5 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Min", style=wx.ALIGN_RIGHT)
        sizer_30.Add(label_5, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 4)
        sizer_30.Add(self.FloatCursorMin, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        sizer_10.Add(sizer_30, 1, wx.ALL | wx.EXPAND, 3)
        sizer_7.Add(sizer_10, 0, wx.EXPAND, 0)
        label_23 = wx.StaticText(self.panel_loop1_controls, wx.ID_ANY, "Loop1 index:")
        sizer_11.Add(label_23, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_11.Add(self.SpinIndex1, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 2)
        sizer_11.Add(self.LabelLoop1Label, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_11.Add(self.LabelIndex1Value, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        self.panel_loop1_controls.SetSizer(sizer_11)
        sizer_7.Add(self.panel_loop1_controls, 0, wx.ALL | wx.EXPAND, 3)
        label_24 = wx.StaticText(self.panel_loop2_controls, wx.ID_ANY, "Loop2 index:")
        sizer_12.Add(label_24, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_12.Add(self.SpinIndex2, 0, wx.LEFT, 2)
        sizer_12.Add(self.LabelLoop2Label, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_12.Add(self.LabelIndex2Value, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        self.panel_loop2_controls.SetSizer(sizer_12)
        sizer_7.Add(self.panel_loop2_controls, 0, wx.ALL | wx.EXPAND, 3)
        label_25 = wx.StaticText(self.panel_loop3_controls, wx.ID_ANY, "Loop3 index:")
        sizer_123.Add(label_25, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_123.Add(self.SpinIndex3, 0, wx.LEFT, 2)
        sizer_123.Add(self.LabelLoop3Label, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer_123.Add(self.LabelIndex3Value, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        self.panel_loop3_controls.SetSizer(sizer_123)
        sizer_7.Add(self.panel_loop3_controls, 0, wx.ALL | wx.EXPAND, 3)
        sizer_16.Add(self.label_14, 0, wx.ALIGN_CENTER | wx.RIGHT, 40)
        sizer_16.Add(self.CheckSumPlots, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 4)
        sizer_7.Add(sizer_16, 0, wx.EXPAND | wx.TOP, 3)
        sizer_13.Add(self.ListPlotMetabolites, 1, wx.EXPAND, 0)
        sizer_7.Add(sizer_13, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_14.Add(self.CheckGrayscale, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 4)
        label_10 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "  Levels : ")
        sizer_14.Add(label_10, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 4)
        sizer_14.Add(self.SpinContourLevels, 0, 0, 0)
        sizer_5.Add(sizer_14, 0, 0, 0)
        label_110 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "  Dimensions: ")
        sizer_17.Add(label_110, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 4)
        sizer_17.Add(self.ChoiceContourMode, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(sizer_17, 0, 0, 0)
        sizer_24.Add(sizer_5, 0, wx.ALL | wx.EXPAND, 3)
        sizer_23.Add(self.buttonResolution, 0, wx.ALIGN_CENTER | wx.ALL, 3)
        label_11 = wx.StaticText(self.PanelVisualize, wx.ID_ANY, "Line Width [Hz] : ", style=wx.ALIGN_RIGHT)
        sizer_22.Add(label_11, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.RIGHT, 5)
        sizer_22.Add(self.FloatLinewidth, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        sizer_23.Add(sizer_22, 1, wx.ALIGN_RIGHT | wx.ALL, 3)
        sizer_6.Add(sizer_23, 0, wx.ALIGN_RIGHT | wx.EXPAND, 0)
        sizer_24.Add(sizer_6, 0, wx.ALL | wx.EXPAND, 3)
        sizer_4.Add(sizer_24, 0, wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_3.Add(self.ButtonAsciiText, 0, wx.EXPAND, 0)
        self.PanelVisualize.SetSizer(sizer_3)
        sizer_aui_notebook.Add(self.TextAuiPlaceholder, 0, 0, 0)
        self.PanelAuiNotebook.SetSizer(sizer_aui_notebook)
        self.SplitterWindow.SplitVertically(self.PanelVisualize, self.PanelAuiNotebook)
        sizer_2.Add(self.SplitterWindow, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def on_display_mode(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_display_mode' not implemented!")
        event.Skip()

    def on_xaxis_max(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_xaxis_max' not implemented!")
        event.Skip()

    def on_xaxis_min(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_xaxis_min' not implemented!")
        event.Skip()

    def on_cursor_max(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_cursor_max' not implemented!")
        event.Skip()

    def on_cursor_min(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_cursor_min' not implemented!")
        event.Skip()

    def on_index1(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_index1' not implemented!")
        event.Skip()

    def on_index2(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_index2' not implemented!")
        event.Skip()

    def on_index3(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_index3' not implemented!")
        event.Skip()

    def on_sum_plots(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_sum_plots' not implemented!")
        event.Skip()

    def on_metabolites(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_metabolites' not implemented!")
        event.Skip()

    def on_grayscale(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_grayscale' not implemented!")
        event.Skip()

    def on_contour_levels(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_contour_levels' not implemented!")
        event.Skip()

    def on_contour_mode(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_contour_mode' not implemented!")
        event.Skip()

    def on_resolution(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_resolution' not implemented!")
        event.Skip()

    def on_linewidth(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_linewidth' not implemented!")
        event.Skip()

    def on_ascii_display(self, event):  # wxGlade: PanelVisualizeUI.<event_handler>
        print("Event handler 'on_ascii_display' not implemented!")
        event.Skip()

# end of class PanelVisualizeUI

class VisualizeFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: VisualizeFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((762, 867))
        self.PanelVisualizeUI = PanelVisualizeUI(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: VisualizeFrame.__set_properties
        self.SetTitle("frame_1")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: VisualizeFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.PanelVisualizeUI, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class VisualizeFrame
